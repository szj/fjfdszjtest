/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.qzgf.NetStore.struts.action.BackAction;

import java.util.List;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.qzgf.NetStore.persistence.User;
import com.qzgf.NetStore.pub.Page;
import com.qzgf.NetStore.service.IUserService;

/** 
 * MyEclipse Struts
 * Creation date: 08-27-2008
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 * @struts.action-forward name="success" path="/JspForm/BackfuncModual/User.jsp"
 */
public class UserAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	@SuppressWarnings("unused")
	private IUserService userService;
	public IUserService getUserService() {
		return userService;
	}
	public void setUserService(IUserService userService) {
		this.userService = userService;
	}
	
	
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	@SuppressWarnings("unchecked")
	public ActionForward select(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		String page =request.getParameter("page");
		
		if (("".equals(page) || page==null)&&(request.getAttribute("uPage")!=null))
		{
		    page =request.getAttribute("uPage").toString();
		}
		
		
		
		if ("".equals(page) || page==null)	{
			page =request.getParameter("targetPage");
		}
		
		if ("".equals(page) || page==null)	{
			page="1";
		}
		//判断一下输入的页值是不是大于总的页数
		String totalPages= request.getParameter("totalPages");
		if  (!"".equals(totalPages) && totalPages!=null)
		if ((Integer.parseInt(page))>(Integer.parseInt(totalPages)))//输入的页数不能超过总页数
			page=totalPages;
         //判断一下输入的页值是不是大于总的页数
		request.setAttribute("page", page);
	
		
		
		Page ppage=this.userService.userList(Integer.parseInt(page));
		request.setAttribute("ppage", ppage);
		
		
		
		return mapping.findForward("userSuccess");
	}
	//详细
	@SuppressWarnings("unchecked")
	public ActionForward detail(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String uId=request.getParameter("uId");//用户id
		List userOnlyList=this.userService.onlyUserList(uId);
		request.setAttribute("userOnlyList", userOnlyList);
		
		String page =request.getParameter("page");
		request.setAttribute("page", page);
		
		
		  User user=(User)userOnlyList.get(0);
	      request.setAttribute("Introduce", user.getIntroduce());//简介
	      
	      request.setAttribute("registerTime", user.getRegisterTime());
	      
	      
		return mapping.findForward("detailSuccess");
	}
	
	// 启用
	public ActionForward used(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		String uPage=request.getParameter("uPage");
		request.setAttribute("uPage", uPage);
		
		String useId=request.getParameter("id");
		String state=request.getParameter("state");
		this.userService.updateUsable(state, useId);
		
		
		
		return mapping.findForward("isable");
		
	}
	
	
	
	
	
	
}