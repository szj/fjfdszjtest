/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.qzgf.NetStore.struts.action.BackAction;

import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.qzgf.NetStore.persistence.RoleValue;
import com.qzgf.NetStore.pub.Page;
import com.qzgf.NetStore.service.IMenuService;
import com.qzgf.NetStore.service.IRoleService;
import com.qzgf.NetStore.service.IRoleValueService;
import com.qzgf.NetStore.struts.form.BackForm.RoleForm;
import com.qzgf.NetStore.struts.form.BackForm.RoleValueForm;

/** 
 * MyEclipse Struts
 * Creation date: 08-28-2008
 * 
 * XDoclet definition:
 * @struts.action path="/manufacturer" name="manufacturerForm" input="/form/manufacturer.jsp" parameter="status" scope="request" validate="true"
 */
public class RoleValueAction extends DispatchAction {
	private IRoleValueService roleValueService;
	
	private IMenuService menuService;
	
	private IRoleService roleService;

	public IRoleValueService getRoleValueService() {
		return roleValueService;
	}
	public void setRoleValueService(IRoleValueService roleValueService) {
		this.roleValueService = roleValueService;
	}
	/**
	 * @return the menuService
	 */
	public IMenuService getMenuService() {
		return menuService;
	}
	/**
	 * @param menuService the menuService to set
	 */
	public void setMenuService(IMenuService menuService) {
		this.menuService = menuService;
	}
	/**
	 * @return the roleService
	 */
	public IRoleService getRoleService() {
		return roleService;
	}
	/**
	 * @param roleService the roleService to set
	 */
	public void setRoleService(IRoleService roleService) {
		this.roleService = roleService;
	}
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	@SuppressWarnings("unchecked")
	public ActionForward queryAllRoleValues(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		@SuppressWarnings("unused")
		String rid=request.getParameter("rid");
		System.out.println("rname没有编码前:"+request.getParameter("rname"));
		try {
			request.setCharacterEncoding("gb2312");
			System.out.println("rname"+request.getParameter("rname"));
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		String rname=request.getParameter("rname");
		List roleValueList=this.roleValueService.queryRoleValues(rid);	
		List menuList=this.menuService.queryMenus();
		request.setAttribute("roleValueList", roleValueList);
		request.setAttribute("Size", roleValueList.size());
		request.setAttribute("rid", rid);
		request.setAttribute("rname", rname);
		request.setAttribute("menuList",menuList);
		return mapping.findForward("roleValueManage_Page");
	}
	public ActionForward addRoleValue(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String rid = request.getParameter("rid");// 回主页
		RoleValueForm f = (RoleValueForm) form; // 得到ActionForm
		String[] funisShow = { "" };
		if (f.getCheckData() != null) {
			funisShow = (String[]) f.getCheckData();
		}
		boolean flag = this.roleValueService.updateRoleValuesShow(funisShow,rid);
		if (flag) {
			String xgResult = "保存成功";
			request.setAttribute("xgResult", xgResult);
			Page ppage = this.roleService.queryRoles(1);
			request.setAttribute("ppage", ppage);
			return mapping.findForward("roleManage_Page");
		} else {
			String xgResult = "保存失败,请重试";
			request.setAttribute("xgResult", xgResult);
			List roleValueList = this.roleValueService.queryRoleValues(rid);
			List menuList = this.menuService.queryMenus();
			request.setAttribute("roleValueList", roleValueList);
			request.setAttribute("Size", roleValueList.size());
			request.setAttribute("rid", rid);
			request.setAttribute("menuList", menuList);
			return mapping.findForward("roleValueManage_Page");
		}

	}
	
// @SuppressWarnings("unchecked")
//	public ActionForward addRoleValue(ActionMapping mapping, ActionForm form,
//			HttpServletRequest request, HttpServletResponse response){
//		String rid=request.getParameter("rid");//回主页
//		RoleValueForm f=(RoleValueForm)form;   //得到ActionForm
//		String[] menuCode = (String[])f.getMenuCode();
//		
//		String[] funisShow = {""};
//		if(f.getFunIsShow()!=null)
//		{
//			funisShow = (String[]) f.getFunIsShow();
//		}
//		
//		String[] powerValue = (String[])f.getPowerValue();
//		String[] remark = (String[])f.getRemark();
//		
//		HashMap roleValue= new HashMap();
//		roleValue.put("menuCode", menuCode);
//		roleValue.put("funisShow", funisShow);
//		roleValue.put("powerValue", powerValue);
//		roleValue.put("remark", remark);
//		
//		
//		int num=Integer.valueOf(request.getParameter("num").toString()).intValue();
//		
//		boolean flag=this.roleValueService.addRoleValuesInfo(roleValue,num,rid);
//
//		if(flag){
//			String xgResult="保存成功";
//			request.setAttribute("xgResult", xgResult);
//			Page ppage = this.roleService.queryRoles(1);
//			request.setAttribute("ppage", ppage);
//			return mapping.findForward("roleManage_Page");
//		}
//		else{
//			String xgResult="保存失败,请重试";
//			request.setAttribute("xgResult", xgResult);
//			List roleValueList=this.roleValueService.queryRoleValues(rid);	
//			List menuList=this.menuService.queryMenus();
//			request.setAttribute("roleValueList", roleValueList);
//			request.setAttribute("Size", roleValueList.size());
//			request.setAttribute("rid", rid);
//			request.setAttribute("menuList",menuList);
//			return mapping.findForward("roleValueManage_Page");	
//		}
//	}
	/**
	 * 生成特定的xml文件
	 */
	public ActionForward getTree(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		String rid = (String) request.getParameter("roleId");
		String root = (String) request.getParameter("root");
		root="0";//无效所有的

		response.setContentType("text/xml;charset=gbk");
		response.setHeader("Cache-Control", "no-cache");
		PrintWriter out;
		try {
			out = response.getWriter();
			out.println(roleValueService.getTree(rid,root));
			System.out.print(roleValueService.getTree(rid,root));
			out.flush();
			out.close();
		} catch (Exception e) {
			// TODO: handle exception
		}
 		return null;

	}

}