/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.qzgf.NetStore.struts.action.BackAction;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.qzgf.NetStore.persistence.Manufacturer;
import com.qzgf.NetStore.pub.Page;
import com.qzgf.NetStore.service.IManufacturerService;
import com.qzgf.NetStore.struts.form.BackForm.ManufacturerForm;

/** 
 * MyEclipse Struts
 * Creation date: 08-28-2008
 * 
 * XDoclet definition:
 * @struts.action path="/manufacturer" name="manufacturerForm" input="/form/manufacturer.jsp" parameter="status" scope="request" validate="true"
 */
public class ManufacturerAction extends DispatchAction {
	private IManufacturerService manufacturerService;

	public IManufacturerService getManufacturerService() {
		return manufacturerService;
	}

	public void setManufacturerService(IManufacturerService manufacturerService) {
		this.manufacturerService = manufacturerService;
	}

	/** 
	 * 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	@SuppressWarnings("unchecked")
	public ActionForward queryAllManufacturers(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		String page =request.getParameter("page");
		if ("".equals(page) || page==null)	{
			page =request.getParameter("targetPage");
		}
		
		if ("".equals(page) || page==null)	{
			page="1";
		}
		//判断一下输入的页值是不是大于总的页数
		String totalPages= request.getParameter("totalPages");
		if  (!"".equals(totalPages) && totalPages!=null)
			if ((Integer.parseInt(page))>(Integer.parseInt(totalPages)))//输入的页数不能超过总页数
				page=totalPages;
	         //判断一下输入的页值是不是大于总的页数	
			request.setAttribute("targetPage", page);
			request.setAttribute("page", page);
			Page ppage = this.manufacturerService.queryManufacturers(Integer.parseInt(page));
			request.setAttribute("ppage",ppage);
		
			return mapping.findForward("manufacturerManage_Page");
		
	}
	
	@SuppressWarnings("unchecked")
	public ActionForward queryManufacturerById(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		@SuppressWarnings("unused")
		String id=request.getParameter("id");
		Map manufacturerMap=this.manufacturerService.queryManufacturersById(id);
		request.setAttribute("manufacturerMap", manufacturerMap);
		return mapping.findForward("manufacturerModify_Page");
	}
	
	@SuppressWarnings("unchecked")
	public ActionForward updateManufacturer(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		ManufacturerForm f=(ManufacturerForm)form;
		Manufacturer mfr=new Manufacturer();
		mfr.setManufacturerId(new Integer(f.getManufacturerId()));
		mfr.setCellPhone(f.getCellPhone());
		mfr.setContactAddress(f.getContactAddress());
		mfr.setContactMan(f.getContactMan());
		mfr.setManufacturerInfo(f.getManufacturerInfo());
		mfr.setManufacturerName(f.getManufacturerName());
		mfr.setPhone(f.getPhone());
		mfr.setPostCode(f.getPostCode());
		mfr.setProducerHomePage(f.getProducerHomePage());
		boolean flag=this.manufacturerService.updateManufacturer(mfr);
		if(flag){
			String xgResult="修改成功";
			request.setAttribute("xgResult", xgResult);
			Map manufacturerMap=this.manufacturerService.queryManufacturersById(f.getManufacturerId());
			request.setAttribute("manufacturerMap", manufacturerMap);
			return mapping.findForward("manufacturerModify_Page");
		}
		else{
			String xgResult="修改失败,请重试";
			request.setAttribute("xgResult", xgResult);
			return null;
		}
	}
	
	public ActionForward to_addPage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		return mapping.findForward("manufacturerAdd_Page");
	}
	
	@SuppressWarnings("unchecked")
	public ActionForward addManufacturer(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		ManufacturerForm f=(ManufacturerForm)form;
		Manufacturer mfr=new Manufacturer();
		mfr.setCellPhone(f.getCellPhone());
		mfr.setContactAddress(f.getContactAddress());
		mfr.setContactMan(f.getContactMan());
		mfr.setManufacturerInfo(f.getManufacturerInfo());
		mfr.setManufacturerName(f.getManufacturerName());
		mfr.setPhone(f.getPhone());
		mfr.setPostCode(f.getPostCode());
		mfr.setProducerHomePage(f.getProducerHomePage());
		boolean flag=this.manufacturerService.addManufacturer(mfr);
		if(!flag){
			String xgResult="添加成功";
			Page ppage = this.manufacturerService.queryManufacturers(1);
			request.setAttribute("ppage",ppage);
			request.setAttribute("xgResult", xgResult);
			return mapping.findForward("manufacturerManage_Page");
		}
		else{
			String xgResult="修改失败,请重试";
			request.setAttribute("xgResult", xgResult);
			return null;
		}
	}
	
	@SuppressWarnings("unchecked")
	public ActionForward deleteManufacturerById(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		@SuppressWarnings("unused")
		String id=request.getParameter("id");
		boolean flag=this.manufacturerService.deleteManufacturer(id);
		if(!flag){
			String xgResult="删除成功";
			request.setAttribute("xgResult", xgResult);
			Page ppage = this.manufacturerService.queryManufacturers(1);
			request.setAttribute("ppage",ppage);
			return mapping.findForward("manufacturerManage_Page");
		}
		else{
			String xgResult="删除失败，请重试";
			request.setAttribute("xgResult", xgResult);
			Page ppage = this.manufacturerService.queryManufacturers(1);
			request.setAttribute("ppage",ppage);
			return mapping.findForward("manufacturerManage_Page");
	    }
	}
}