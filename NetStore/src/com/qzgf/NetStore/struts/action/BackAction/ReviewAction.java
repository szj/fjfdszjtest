/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.qzgf.NetStore.struts.action.BackAction;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.qzgf.NetStore.persistence.Review;
import com.qzgf.NetStore.pub.Page;
import com.qzgf.NetStore.service.IReviewService;

/** 
 * MyEclipse Struts
 * Creation date: 08-22-2008
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 * @struts.action-forward name="reviewSuccess" path="/JspForm/BackfuncModual/Review.jsp"
 */
public class ReviewAction extends DispatchAction {

	/*
	 * Generated Methods
	 */
	private IReviewService reviewService;
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	@SuppressWarnings("unchecked")
	public ActionForward select(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		//List reviewList=this.reviewService.reviewList();
		//request.setAttribute("reviewList", reviewList);	
		String page="";
		if(request.getAttribute("page")!=null)
		{
			page=request.getAttribute("page").toString();
		}
		else
		{
		page="1";
		}
		request.setAttribute("page", page);
		
		//t值得问题
		
		String t=request.getParameter("t");
		if (("".equals(t) || t==null)&&(request.getAttribute("t")!=null))
		{
			t=request.getAttribute("t").toString();
		}
		
		if(t==null)
		{
		t="1";
		}
		request.setAttribute("t", t);	
		
		//t值得问题
		
		Page ppage = this.reviewService.reviewList(Integer.parseInt(page),t);
		request.setAttribute("ppage",ppage);
		
		return mapping.findForward("reviewSuccess");
	}
	
	//显示所有
	@SuppressWarnings("unchecked")
	public ActionForward allReview(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		String page =request.getParameter("page");
		if ("".equals(page) || page==null)	{
			page =request.getParameter("targetPage");
		}
		
		if ("".equals(page) || page==null)	{
			page="1";
		}
		//判断一下输入的页值是不是大于总的页数
		String totalPages= request.getParameter("totalPages");
		if  (!"".equals(totalPages) && totalPages!=null)
		if ((Integer.parseInt(page))>(Integer.parseInt(totalPages)))//输入的页数不能超过总页数
			page=totalPages;
         //判断一下输入的页值是不是大于总的页数	
		request.setAttribute("targetPage", page);
		request.setAttribute("page", page);


		String t=request.getParameter("t");
		if(("".equals(t) || t==null)&&(request.getParameter("tt")!=null))
		{
			t=request.getParameter("tt");
		}
			
		request.setAttribute("t", t);
		
		return mapping.findForward("all");

	}
 
	//查询－未回复评论
	@SuppressWarnings("unchecked")
	public ActionForward notReply(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		List reviewList=this.reviewService.reviewReplyList();
		request.setAttribute("reviewList", reviewList);	
		
		String t=request.getParameter("t");
		request.setAttribute("t", t);

		return  mapping.findForward("all");
		
	}
	
	
	//查询-未审核
	@SuppressWarnings("unchecked")
	public ActionForward notAudit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
        
	    String ve="0";
		List reviewList=this.reviewService.reviewAuditList(ve);
		request.setAttribute("reviewList", reviewList);	
		
		String t=request.getParameter("t");
		request.setAttribute("t", t);

		
		return  mapping.findForward("all");
	}
	
	//查询－已经审核
	@SuppressWarnings("unchecked")
	public ActionForward Audit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		    String ve="1";//已经审核
			List reviewList=this.reviewService.reviewAuditList(ve);
			request.setAttribute("reviewList", reviewList);	
			
			//String page =request.getParameter("page");
			//request.setAttribute("page", page);
			
			
			String t=request.getParameter("t");
			request.setAttribute("t", t);

			return  mapping.findForward("all");	
		
	}
	
	//审核通过
	
	@SuppressWarnings("unchecked")
	public ActionForward Audited(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String rId=request.getParameter("rId");//
		String tag="1";//表示审核已经通过
		this.reviewService.reviewAudited(rId, tag);
		
		
		String page =request.getParameter("page");
		request.setAttribute("page", page);
		
		
		String t=request.getParameter("t");
		request.setAttribute("t", t);
		
		
		//selectPublic(request);//选择公用
		
		
		return mapping.findForward("all");
	}
	
	//取消审核
	@SuppressWarnings("unchecked")
	public ActionForward Auditing(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		
		String rId=request.getParameter("rId");//
		String tag="0";//表示审核未通过
		this.reviewService.reviewAudited(rId, tag);
		
		String page =request.getParameter("page");
		request.setAttribute("page", page);
		
		
		String t=request.getParameter("t");
		request.setAttribute("t", t);
		
		//selectPublic(request);//选择公用
		
		
		return mapping.findForward("all");//所有回复

	}
	
	
	//回复中。．．
	@SuppressWarnings("unchecked")
	public ActionForward Replying(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
	      String rId=request.getParameter("rId");
	      request.setAttribute("rId", rId);
	      
	      List   replyingList= this.reviewService.replyingList(rId);
	      request.setAttribute("replyingList", replyingList);
	      
	      
	      Review rew=(Review)replyingList.get(0);
	      request.setAttribute("reviewContect", rew.getContent());//评论内容
	      
	      request.setAttribute("replyContent", rew.getReplyContent());
	      
	      
	        String page =request.getParameter("page");
			request.setAttribute("page", page);
			
			
			String t=request.getParameter("t");
			request.setAttribute("t", t);
	     
	      return mapping.findForward("Replying");
	}
	
	
	//保存回复　
	
	@SuppressWarnings("unchecked")
	public ActionForward save(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		
		String rId=request.getParameter("rId");
		request.setAttribute("rId", rId);
		
		
		String replyContent=request.getParameter("replyContentH");
		this.reviewService.update(rId, replyContent);
		
		    String page =request.getParameter("page");
			request.setAttribute("page", page);
			
			
			String t=request.getParameter("t");
			request.setAttribute("t", t);
		
		
		//selectPublic(request);//选择公用
		
		return mapping.findForward("all");
	}
	
/*	//选择公用
	@SuppressWarnings("unchecked")
	public void selectPublic(HttpServletRequest request){
		/////////保存
		String t=request.getParameter("t");
		request.setAttribute("t", t);
		
	
		if(t.equals("2"))
		{
		//未回复
		List reviewList=this.reviewService.reviewReplyList();
		request.setAttribute("reviewList", reviewList);	
		//未回复
		} else if(t.equals("3"))
		{
		
		//未审核
		    String ve="0";
			List reviewList=this.reviewService.reviewAuditList(ve);
			request.setAttribute("reviewList", reviewList);	
			//未审核
		}
		else if(t.equals("4"))
		{
	    //已经审核	
		String ve="1";
		List reviewList=this.reviewService.reviewAuditList(ve);
		request.setAttribute("reviewList", reviewList);	
	    //已经审核
				
		}	
		else
		{
			//所有评论
			List reviewList=this.reviewService.reviewList(1);
			request.setAttribute("reviewList", reviewList);	
			//所有评论
		}
		////////////
	}
	*/
	
	
	
	
	@SuppressWarnings("unchecked")
	public ActionForward delete(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String reviewId=request.getParameter("rId");
		request.setAttribute("rId", reviewId);
        this.reviewService.Delete(reviewId);
        
        /////////保存
        String page =request.getParameter("page");
		request.setAttribute("page", page);
		
		
		String t=request.getParameter("t");
		request.setAttribute("t", t);
		
	
/*		if(t.equals("2"))
		{
		//未回复
		List reviewList=this.reviewService.reviewReplyList();
		request.setAttribute("reviewList", reviewList);	
		//未回复
		} else if(t.equals("3"))
		{
		
		//未审核
		    String ve="0";
			List reviewList=this.reviewService.reviewAuditList(ve);
			request.setAttribute("reviewList", reviewList);	
			//未审核
		}
		else if(t.equals("4"))
		{
	    //已经审核	
		String ve="1";
		List reviewList=this.reviewService.reviewAuditList(ve);
		request.setAttribute("reviewList", reviewList);	
	    //已经审核
				
		}	*/
		/*else
		{
			//所有评论
			List reviewList=this.reviewService.reviewList();
			request.setAttribute("reviewList", reviewList);	
			//所有评论
		}*/
		////////////
		return mapping.findForward("all");
	}
	
	
	
	public IReviewService getReviewService() {
		return reviewService;
	}
	public void setReviewService(IReviewService reviewService) {
		this.reviewService = reviewService;
	}
}