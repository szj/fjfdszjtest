<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
     <link href="../../../../Lib/ligerUI/skins/Silvery/css/ligerui-common.css" rel="stylesheet" type="text/css" /> 
    <link href="../../../../Lib/ligerUI/skins/Silvery/css/ligerui-dialog.css" rel="stylesheet" type="text/css" />
    <link href="../../../../Lib/ligerUI/skins/Silvery/css/ligerui-grid.css" rel="stylesheet"  type="text/css" />
    <link href="../../../../Lib/ligerUI/skins/Silvery/css/ligerui-form.css" rel="stylesheet" type="text/css" />
    <link href="../../../../Lib/ligerUI/skins/ligerui-icons.css" rel="stylesheet" type="text/css" />
    <script src="../../../../Lib/jquery/jquery-1.3.2.min.js" type="text/javascript"></script>
    <script src="../../../../Lib/ligerUI/js/ligerui.all.js" type="text/javascript"></script>  
    <script src="../../../../Content/Lib/js/common.js" type="text/javascript"></script>

    <script type="text/javascript">
        debugger; //调试时使用
        var gridManager = null;
        var activeDialog = null;

        function f_openWindow(url, title, width, height) {
            var dialogOptions = { width: width, height: height, title: title, url: url, buttons: [
            { text: '保存', onclick: function (item, dialog) {
                dialog.frame.f_save("qzgfframe" + GetUrlParam('_menuid'));
            }
            },
            { text: '关闭', onclick: function (item, dialog) {
                dialog.close();
            }
            }
            ], isResize: true, timeParmName: 'a'
            };
            activeDialog = parent.jQuery.ligerDialog.open(dialogOptions);
        }
        function f_closeWindow(reload) {
            activeDialog && activeDialog.close();
            reload && f_reload();
        }
        function f_btnClick(item) {
            switch (item.id) {
                case "add":
                    f_add();
                    break;
                case "modify":
                    f_modify();
                    break;
                case "delete":
                    f_delete();
                    break;
                case "usestart":
                    f_usestate("1");
                    break;
                case "usestop":
                    f_usestate("2");
                    break;
                case "addhandtest":
                    f_add();
                    break;
                case "addrandomtest":
                    f_addrandom();
                    break;
                default:
                    $.ligerDialog.alert('暂未实现!');
                    break;
            }
        }
        function f_button() {
            var rowsdata = gridManager.getCheckedRows();
            if (!rowsdata.length) {
                $.ligerDialog.alert('请先选择行!');
                return;
            }
            var id = rowsdata[0].ID;
            f_openWindow('system/ButtonList.aspx?CurID=' + id, '菜单操作管理', 600, 350);
        }
        function f_modify() {
            var rowsdata = gridManager.getCheckedRows();
            if (rowsdata.length!=1) {
                $.ligerDialog.alert('请选择一行记录!');
                return;
            }
            var id = rowsdata[0].ExamTestContent.ID;
            if (rowsdata[0].TestState != 5)
                window.location.href = "/Exam/Test/ModifyHand/?id=" + id;
            else $.ligerDialog.alert("该试卷正在进行考试，不能修改。");
           
        }
        function f_add() {
            window.location.href = "/Exam/Test/AddHand/0";
        }
        function f_addrandom() {
            window.location.href = "/Exam/Test/AddRandom/0";
        }
        function f_addset(testid, teststate) {
            if (teststate == "已组织练习考") {
                $.ligerDialog.alert("该卷已组织过练习考，不能组织考试。");
                return;
            }
            else if (teststate == "已组织模拟考") {
                $.ligerDialog.alert("该卷已组织过模拟考，不能组织考试。");
                return;
            }
            f_openWindow('/Exam/TestSet/add/?testid=' + testid, '组织考试设置', 800, 500);
        }
        function f_addmock(testid, teststate) {
            if (teststate == "已组织考试") {
                $.ligerDialog.alert("该试卷已经组织考试，不能组织模拟卷。");
                return;
            }
            else if (teststate == "已开考") {
                $.ligerDialog.alert("该试卷正在进行考试，不能组织模拟卷。");
                return;
            }
            f_openWindow('/Exam/TestMock/add/?testid=' + testid, '组织模拟卷设置', 800, 400);
        }
        function f_addexercise(testid, teststate) {
            if (teststate == "已组织考试") {
                $.ligerDialog.alert("该试卷已经组织考试，不能组织练习卷。");
                return;
            }
            else if (teststate == "已开考") {
                $.ligerDialog.alert("该试卷正在进行考试，不能组织练习卷。");
                return;
            }
            f_openWindow('/Exam/TestExercise/add/?testid=' + testid, '组织练习卷设置', 800, 300);
        }
        function f_delete() {
            var rowsdata = gridManager.getCheckedRows();
            if (!rowsdata.length) {
                $.ligerDialog.alert('请先选择行!');
                return;
            }

            for (i = 0; i < rowsdata.length; i++) {
                //如果试卷状态不等于未组织或者考试结束，那么不可删除
                for (i = 0; i < rowsdata.length; i++) {
                    if (rowsdata[i].ExamTestContent.IsDelete == false) {
                        if (rowsdata.length == 1)
                            $.ligerDialog.alert('该试卷已经被使用，删除操作无法进行。');
                        else
                            $.ligerDialog.alert('删除的列表中存在已经被使用的试卷，删除操作无法进行。');
                        return;
                    }
                }
            }
            $.ligerDialog.confirm("是否确认删除?", "提示", function (ok) {
                if (ok) {
                    $.ligerDialog.waitting("正在删除中...");
                    var idStr = "";
                    $(rowsdata).each(function (i, item) {
                        idStr += this.ExamTestContent.ID;
                        if (i < rowsdata.length - 1) {
                            idStr += ",";
                        }
                    });
                    $.getJSON('/Exam/Test/Delete/' + idStr, { Rnd: Math.random() }, function (data) {
                        if (data.Type) {
                            $.ligerDialog.success("删除成功");
                        }
                        else {
                            $.ligerDialog.error("删除失败!<BR>" + data.Message);
                        }
                        $.ligerDialog.closeWaitting();
                        f_reload();
                    });
                } else {
                    return;
                }
            });
           
        }
        $(function () {
          
            f_setToolbar();
            f_setGrid();
        });
        function f_setToolbar() {
            SetButtons($("#toolbar"), "/system/menu/GetButton?menuid=20111114232216216362");
        }
        function f_setGrid() {
            gridManager = $("#maingrid").ligerGrid({
                columns: [
                { display: '试卷名称', name: 'TestName',align: 'left', width: 360, minWidth: 300 },
                { display: '总分', name: 'Points',  align: 'left', width: 60, minWidth: 40 },
                { display: '试卷类型', name: 'TestType', align: 'left', width: 100, minWidth: 80 },
                { display: '试卷状态', name: 'TestState', align: 'left', width: 100, minWidth: 80 },
                { display: '创建时间', name: 'CreateTime', type: 'date', align: 'left', width: 120, minWidth: 90 },
                { display: '组织考试', name: 'TestID,TestState', type: 'javascript', func: 'f_addset', linkName: '设置', align: 'left', width: 70, minWidth: 50 },
                { display: '组织模拟考试', name: 'TestID,TestState', type: 'javascript', func: 'f_addmock', linkName: '设置', align: 'left', width: 100, minWidth: 80 },
                { display: '组织练习', name: 'TestID,TestState', type: 'javascript', func: 'f_addexercise', linkName: '设置', align: 'left', width: 70, minWidth: 50 },
                { display: '预览', name: 'ViewTestUrl', align: 'left', width: 70, minWidth: 50 }
                ], dataAction: 'server',
                // url: "../../Service/BillListData.ashx?Action=GetGridView&gridviewname=system_menu", sortName: 'id',
                url: "/Exam/Test/gridpager", sortName: 'id',
                width: '99%', height: '100%', pageSize: 15,
                checkbox: true,
                heightDiff: -9,
                onError: function (a, b) {
                    debugger
                }
            });
        }
        function f_reload() {
            gridManager && gridManager.loadData(true);
        }
    </script>
    <style type="text/css"> 
        #maingrid{ margin:0 auto;}
        #toolbar{margin:2px auto;width:99%; background:#F3F8F9;border: 1px solid #B6D3E0; height:30px; line-height:30px;}
        #toolbar .l-toolbar-item{ margin-top:4px;}
    </style>
</head>
<body>
    <form id="form1" runat="server">
    <div id="topmenu"></div>
    <div id="toolbar"></div>
    <div id="searchbar"></div>
    <div id="maingrid"></div>
    </form>
</body>
</html>
