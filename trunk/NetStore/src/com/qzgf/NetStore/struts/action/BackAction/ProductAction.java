/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.qzgf.NetStore.struts.action.BackAction;



import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.qzgf.NetStore.pub.Page;
import com.qzgf.NetStore.service.IProductService;

//import java.util.*;
//import java.text.SimpleDateFormat;



/** 
 * MyEclipse Struts
 * Creation date: 08-12-2008
 * 
 * XDoclet definition:
 * @struts.action path="/productManage" name="productManageForm" input="/form/productManage.jsp" scope="request" validate="true"
 */
public class ProductAction extends Action {
	private IProductService productService;
	/*
	 * Generated Methods
	 */


	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	
	@SuppressWarnings("unchecked")
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		String page =request.getParameter("page");
		if ("".equals(page) || page==null)	{
			page =request.getParameter("targetPage");
		}
		
		if ("".equals(page) || page==null)	{
			page="1";
		}
		
		//判断一下输入的页值是不是大于总的页数
		String totalPages= request.getParameter("totalPages");
		if  (!"".equals(totalPages) && totalPages!=null)
		if ((Integer.parseInt(page))>(Integer.parseInt(totalPages)))//输入的页数不能超过总页数
			page=totalPages;
         //判断一下输入的页值是不是大于总的页数
		request.setAttribute("page", page);
		
		
		String selType=request.getParameter("GoQry");
		
		//判断一下是不是点击Go
		if("".equals(selType)||"null".equals(selType)||(selType==null))
		{
		 selType=request.getParameter("selType");
		}
		
		if("".equals(selType)||"null".equals(selType)||(selType==null))
		{
		selType=request.getParameter("selTypeUrl");
		}
		if("".equals(selType)||"null".equals(selType)||(selType==null))
		{
		 selType=request.getParameter("selTypeGo");
		}
		
		
		if("".equals(selType)||"null".equals(selType)||(selType==null))
		{
	    String delStr=request.getParameter("action");
	    if(delStr==null)//不是删除
	    {
	    	
	    	Page ppage=this.productService.showProducts(Integer.parseInt(page));
			request.setAttribute("ppage", ppage);
			
	    }
	    else
	    {
	    	String pId=request.getParameter("pId");
	    	String sPic=request.getParameter("sPic");
	    	String bPic=request.getParameter("bPic");
	    	
	    	  //ServletContext   servletContext   =   pageContext.getServletContext();   
			 //servletContext.getRealPath("/");
			  String path=request.getRealPath("/upload");
	    	this.productService.delete(pId,sPic,bPic,path);
	    	
	    	Page ppage=this.productService.showProducts(Integer.parseInt(page));
			request.setAttribute("ppage", ppage);
	    }
		}
		else
		{
			
		    request.setAttribute("selType",selType);
			
			String searchStr=request.getParameter("searchContent");//搜索的内容
			Page ppage=this.productService.searchProducts(Integer.parseInt(page), searchStr, selType);
			request.setAttribute("ppage", ppage);
		}
	    

		    /*Calendar cal = new GregorianCalendar();
			int year = cal.get(Calendar.YEAR);  
			int month = cal.get(Calendar.MONTH); 
			int day = cal.get(Calendar.DAY_OF_MONTH);
			int hour=cal.get(Calendar.HOUR_OF_DAY);
			int minute=cal.get(Calendar.MINUTE);
			int second=cal.get(Calendar.SECOND);
			Calendar t = new GregorianCalendar(year,month,day,hour,minute,second);  	  
			SimpleDateFormat Format = new SimpleDateFormat("yyyyMMddhhmmss");	
			String fileName=Format.format(t.getTime());
		    System.out.println(fileName); */
		
	    return mapping.findForward("product_Page");
	    
	}
	

	

	public IProductService getProductService() {
		return productService;
	}


	public void setProductService(IProductService productService) {
		this.productService = productService;
	}


	
}