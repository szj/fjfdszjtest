/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.qzgf.NetStore.struts.action.BackAction;

import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.qzgf.NetStore.persistence.SendMode;
import com.qzgf.NetStore.service.ISendModeService;
import com.qzgf.NetStore.struts.form.BackForm.SendModeForm;


/** 
 * MyEclipse Struts
 * Creation date: 08-20-2008
 * 
 * XDoclet definition:
 * @struts.action path="/sendMode" name="sendModeForm" input="/form/sendMode.jsp" parameter="status" scope="request" validate="true"
 */
public class SendModeAction extends DispatchAction {
	private ISendModeService sendModeService;

	public ISendModeService getSendModeService() {
		return sendModeService;
	}

	public void setSendModeService(ISendModeService sendModeService) {
		this.sendModeService = sendModeService;
	}

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	@SuppressWarnings("unchecked")
	public ActionForward querySendMode(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		List sendModeList=this.sendModeService.querySendMode();
		request.setAttribute("sendModeList", sendModeList);
		return mapping.findForward("sendModeManage_Page");
	}
	
	/**
	 * 更新某一配送方式
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	@SuppressWarnings("unchecked")
	public ActionForward updateSendMode(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
	
		String  sendModeName=null;
		String  sendModeId=null;
		String  sendFee =null;
		String  sendTime=null;
        String ind=request.getParameter("ind");
        sendModeName=request.getParameter("sendModeName"+String.valueOf(ind));
        String sendModeName1="";
        try {
			sendModeName1=new String(sendModeName.getBytes("gb2312"),"gb2312");
			if(!sendModeName1.equals(sendModeName)){
				sendModeName=new String(sendModeName.getBytes("ISO-8859-1"),"gb2312");
			}
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		}
        sendModeId=request.getParameter("sendModeId"+ind);
        sendFee=request.getParameter("sendFee"+ind);
        sendTime=request.getParameter("sendTime"+ind);
        String sendTime1="";
        try {
			sendTime1=new String(sendTime.getBytes("gb2312"),"gb2312");
			if(!sendTime1.equals(sendTime)){
				sendTime=new String(sendTime.getBytes("ISO-8859-1"),"gb2312");
			}
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
       
		SendMode sendMode=new SendMode();
		sendMode.setSendModeId(new Integer(sendModeId));
		sendMode.setSendModeName(sendModeName);
		sendMode.setSendFee(new Float(sendFee));
		sendMode.setSendTime(sendTime);
		boolean flag=this.sendModeService.updateSendMode(sendMode);
		String xgResult=null;
		if(flag){
		    xgResult="序号："+sendModeId+"数据修改成功";
		}else{
		    xgResult="序号："+sendModeId+"数据修改失败";
		}
		request.setAttribute("xgResult", xgResult);
		List sendModeList=this.sendModeService.querySendMode();
		request.setAttribute("sendModeList", sendModeList);
		return mapping.findForward("sendModeManage_Page");
	}
	
	/**
	 * 删除某一配送方式
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward deleteSendMode(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		try {
			request.setCharacterEncoding("gbk");
		} catch (UnsupportedEncodingException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		response.setContentType("text/html;charset=gbk");
		response.setHeader("Cache-Control", "no-cache");
        PrintWriter out=null;
        try {
			out = response.getWriter();
		} catch (IOException e1) {
			e1.printStackTrace();
		}
		
		String sendModeId = request.getParameter("sendModeId");

		boolean flag=this.sendModeService.deleteSendMode(sendModeId);
		if(flag){
			out.print(false);
		}else{
			out.print(true);
		}
		return null;
	}
	
	@SuppressWarnings("unchecked")
	public ActionForward addSendMode(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
	    SendModeForm f=(SendModeForm)form;
	    String sendModeName=f.getSendModeName();
	    String sendFee=f.getSendFee();
	    String sendTime=f.getSendTime();
	    SendMode sendMode=new SendMode();
	    try {
			String sendModeName1=new String(sendModeName.getBytes("gb2312"),"gb2312");
			if(!sendModeName1.equals(sendModeName)){
				sendModeName=new String(sendModeName.getBytes("ISO-8859-1"),"gb2312");
			}
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	    
	    
	    sendMode.setSendModeName(sendModeName);
	    sendMode.setSendFee(new Float(sendFee));
	    sendMode.setSendTime(sendTime);
	    String sendTime1="";
        try {
			sendTime1=new String(sendTime.getBytes("gb2312"),"gb2312");
			if(!sendTime1.equals(sendTime)){
				sendTime=new String(sendTime.getBytes("ISO-8859-1"),"gb2312");
			}
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	    boolean flag=this.sendModeService.addSendMode(sendMode);
	    if(flag){
	    	String xgResult="添加数据失败";
	    	request.setAttribute("xgResult", xgResult);
	    	List sendModeList=this.sendModeService.querySendMode();
	    	request.setAttribute("sendModeList", sendModeList);
	    }
	    else{
	    	String xgResult="添加数据成功";
	    	request.setAttribute("xgResult",xgResult);
	    	List sendModeList=this.sendModeService.querySendMode();
			request.setAttribute("sendModeList", sendModeList);
	    }
	    return mapping.findForward("sendModeManage_Page");
	}	
}